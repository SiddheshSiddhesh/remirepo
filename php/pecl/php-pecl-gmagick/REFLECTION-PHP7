Extension [ <persistent> extension #62 gmagick version 2.0.4RC1 ] {

  - Classes [5] {
    Class [ <internal:gmagick> final class GmagickException extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:gmagick> final class GmagickPixelException extends Exception implements Throwable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception, prototype Throwable> public method __toString ] {
        }
      }
    }

    Class [ <internal:gmagick> class Gmagick ] {

      - Constants [249] {
        Constant [ integer COLOR_BLACK ] { 11 }
        Constant [ integer COLOR_BLUE ] { 12 }
        Constant [ integer COLOR_CYAN ] { 13 }
        Constant [ integer COLOR_GREEN ] { 14 }
        Constant [ integer COLOR_RED ] { 15 }
        Constant [ integer COLOR_YELLOW ] { 16 }
        Constant [ integer COLOR_MAGENTA ] { 17 }
        Constant [ integer COLOR_OPACITY ] { 18 }
        Constant [ integer COLOR_ALPHA ] { 19 }
        Constant [ integer COLOR_FUZZ ] { 20 }
        Constant [ integer GMAGICK_EXTNUM ] { 1 }
        Constant [ integer COMPOSITE_DEFAULT ] { 1 }
        Constant [ integer COMPOSITE_UNDEFINED ] { 0 }
        Constant [ integer COMPOSITE_NO ] { 23 }
        Constant [ integer COMPOSITE_ADD ] { 8 }
        Constant [ integer COMPOSITE_ATOP ] { 4 }
        Constant [ integer COMPOSITE_BUMPMAP ] { 12 }
        Constant [ integer COMPOSITE_CLEAR ] { 18 }
        Constant [ integer COMPOSITE_COLORIZE ] { 28 }
        Constant [ integer COMPOSITE_COPYBLACK ] { 35 }
        Constant [ integer COMPOSITE_COPYBLUE ] { 16 }
        Constant [ integer COMPOSITE_COPY ] { 13 }
        Constant [ integer COMPOSITE_COPYCYAN ] { 32 }
        Constant [ integer COMPOSITE_COPYGREEN ] { 15 }
        Constant [ integer COMPOSITE_COPYMAGENTA ] { 33 }
        Constant [ integer COMPOSITE_COPYOPACITY ] { 17 }
        Constant [ integer COMPOSITE_COPYRED ] { 14 }
        Constant [ integer COMPOSITE_COPYYELLOW ] { 34 }
        Constant [ integer COMPOSITE_DARKEN ] { 24 }
        Constant [ integer COMPOSITE_DIFFERENCE ] { 10 }
        Constant [ integer COMPOSITE_DISPLACE ] { 20 }
        Constant [ integer COMPOSITE_DISSOLVE ] { 19 }
        Constant [ integer COMPOSITE_HUE ] { 26 }
        Constant [ integer COMPOSITE_IN ] { 2 }
        Constant [ integer COMPOSITE_LIGHTEN ] { 25 }
        Constant [ integer COMPOSITE_LUMINIZE ] { 29 }
        Constant [ integer COMPOSITE_MINUS ] { 7 }
        Constant [ integer COMPOSITE_MODULATE ] { 21 }
        Constant [ integer COMPOSITE_MULTIPLY ] { 11 }
        Constant [ integer COMPOSITE_OUT ] { 3 }
        Constant [ integer COMPOSITE_OVER ] { 1 }
        Constant [ integer COMPOSITE_OVERLAY ] { 31 }
        Constant [ integer COMPOSITE_PLUS ] { 6 }
        Constant [ integer COMPOSITE_REPLACE ] { 13 }
        Constant [ integer COMPOSITE_SATURATE ] { 27 }
        Constant [ integer COMPOSITE_SCREEN ] { 30 }
        Constant [ integer COMPOSITE_SUBTRACT ] { 9 }
        Constant [ integer COMPOSITE_THRESHOLD ] { 22 }
        Constant [ integer COMPOSITE_XOR ] { 5 }
        Constant [ integer MONTAGEMODE_FRAME ] { 1 }
        Constant [ integer MONTAGEMODE_UNFRAME ] { 2 }
        Constant [ integer MONTAGEMODE_CONCATENATE ] { 3 }
        Constant [ integer STYLE_NORMAL ] { 0 }
        Constant [ integer STYLE_ITALIC ] { 1 }
        Constant [ integer STYLE_OBLIQUE ] { 2 }
        Constant [ integer STYLE_ANY ] { 3 }
        Constant [ integer FILTER_UNDEFINED ] { 0 }
        Constant [ integer FILTER_POINT ] { 1 }
        Constant [ integer FILTER_BOX ] { 2 }
        Constant [ integer FILTER_TRIANGLE ] { 3 }
        Constant [ integer FILTER_HERMITE ] { 4 }
        Constant [ integer FILTER_HANNING ] { 5 }
        Constant [ integer FILTER_HAMMING ] { 6 }
        Constant [ integer FILTER_BLACKMAN ] { 7 }
        Constant [ integer FILTER_GAUSSIAN ] { 8 }
        Constant [ integer FILTER_QUADRATIC ] { 9 }
        Constant [ integer FILTER_CUBIC ] { 10 }
        Constant [ integer FILTER_CATROM ] { 11 }
        Constant [ integer FILTER_MITCHELL ] { 12 }
        Constant [ integer FILTER_LANCZOS ] { 13 }
        Constant [ integer FILTER_BESSEL ] { 14 }
        Constant [ integer FILTER_SINC ] { 15 }
        Constant [ integer IMGTYPE_UNDEFINED ] { 0 }
        Constant [ integer IMGTYPE_BILEVEL ] { 1 }
        Constant [ integer IMGTYPE_GRAYSCALE ] { 2 }
        Constant [ integer IMGTYPE_GRAYSCALEMATTE ] { 3 }
        Constant [ integer IMGTYPE_PALETTE ] { 4 }
        Constant [ integer IMGTYPE_PALETTEMATTE ] { 5 }
        Constant [ integer IMGTYPE_TRUECOLOR ] { 6 }
        Constant [ integer IMGTYPE_TRUECOLORMATTE ] { 7 }
        Constant [ integer IMGTYPE_COLORSEPARATION ] { 8 }
        Constant [ integer IMGTYPE_COLORSEPARATIONMATTE ] { 9 }
        Constant [ integer IMGTYPE_OPTIMIZE ] { 10 }
        Constant [ integer RESOLUTION_UNDEFINED ] { 0 }
        Constant [ integer RESOLUTION_PIXELSPERINCH ] { 1 }
        Constant [ integer RESOLUTION_PIXELSPERCENTIMETER ] { 2 }
        Constant [ integer COMPRESSION_UNDEFINED ] { 0 }
        Constant [ integer COMPRESSION_NO ] { 1 }
        Constant [ integer COMPRESSION_BZIP ] { 2 }
        Constant [ integer COMPRESSION_FAX ] { 3 }
        Constant [ integer COMPRESSION_GROUP4 ] { 4 }
        Constant [ integer COMPRESSION_JPEG ] { 5 }
        Constant [ integer COMPRESSION_LOSSLESSJPEG ] { 6 }
        Constant [ integer COMPRESSION_LZW ] { 7 }
        Constant [ integer COMPRESSION_RLE ] { 8 }
        Constant [ integer COMPRESSION_ZIP ] { 9 }
        Constant [ integer INTERLACE_UNDEFINED ] { 0 }
        Constant [ integer INTERLACE_NO ] { 1 }
        Constant [ integer INTERLACE_NONE ] { 1 }
        Constant [ integer INTERLACE_LINE ] { 2 }
        Constant [ integer INTERLACE_PLANE ] { 3 }
        Constant [ integer INTERLACE_PARTITION ] { 4 }
        Constant [ integer PAINT_POINT ] { 0 }
        Constant [ integer PAINT_REPLACE ] { 1 }
        Constant [ integer PAINT_FLOODFILL ] { 2 }
        Constant [ integer PAINT_FILLTOBORDER ] { 3 }
        Constant [ integer PAINT_RESET ] { 4 }
        Constant [ integer GRAVITY_NORTHWEST ] { 1 }
        Constant [ integer GRAVITY_NORTH ] { 2 }
        Constant [ integer GRAVITY_NORTHEAST ] { 3 }
        Constant [ integer GRAVITY_WEST ] { 4 }
        Constant [ integer GRAVITY_CENTER ] { 5 }
        Constant [ integer GRAVITY_EAST ] { 6 }
        Constant [ integer GRAVITY_SOUTHWEST ] { 7 }
        Constant [ integer GRAVITY_SOUTH ] { 8 }
        Constant [ integer GRAVITY_SOUTHEAST ] { 9 }
        Constant [ integer STRETCH_NORMAL ] { 0 }
        Constant [ integer STRETCH_ULTRACONDENSED ] { 1 }
        Constant [ integer STRETCH_CONDENSED ] { 3 }
        Constant [ integer STRETCH_SEMICONDENSED ] { 4 }
        Constant [ integer STRETCH_SEMIEXPANDED ] { 5 }
        Constant [ integer STRETCH_EXPANDED ] { 6 }
        Constant [ integer STRETCH_EXTRAEXPANDED ] { 7 }
        Constant [ integer STRETCH_ULTRAEXPANDED ] { 8 }
        Constant [ integer STRETCH_ANY ] { 9 }
        Constant [ integer ALIGN_UNDEFINED ] { 0 }
        Constant [ integer ALIGN_LEFT ] { 1 }
        Constant [ integer ALIGN_CENTER ] { 2 }
        Constant [ integer ALIGN_RIGHT ] { 3 }
        Constant [ integer DECORATION_NO ] { 0 }
        Constant [ integer DECORATION_UNDERLINE ] { 1 }
        Constant [ integer DECORATION_OVERLINE ] { 2 }
        Constant [ integer DECORATION_LINETROUGH ] { 3 }
        Constant [ integer NOISE_UNIFORM ] { 0 }
        Constant [ integer NOISE_GAUSSIAN ] { 1 }
        Constant [ integer NOISE_MULTIPLICATIVEGAUSSIAN ] { 2 }
        Constant [ integer NOISE_IMPULSE ] { 3 }
        Constant [ integer NOISE_LAPLACIAN ] { 4 }
        Constant [ integer NOISE_POISSON ] { 5 }
        Constant [ integer CHANNEL_UNDEFINED ] { 0 }
        Constant [ integer CHANNEL_RED ] { 1 }
        Constant [ integer CHANNEL_CYAN ] { 2 }
        Constant [ integer CHANNEL_GREEN ] { 3 }
        Constant [ integer CHANNEL_MAGENTA ] { 4 }
        Constant [ integer CHANNEL_BLUE ] { 5 }
        Constant [ integer CHANNEL_YELLOW ] { 6 }
        Constant [ integer CHANNEL_OPACITY ] { 7 }
        Constant [ integer CHANNEL_MATTE ] { 9 }
        Constant [ integer CHANNEL_BLACK ] { 8 }
        Constant [ integer CHANNEL_INDEX ] { 8 }
        Constant [ integer CHANNEL_ALL ] { 10 }
        Constant [ integer CHANNEL_DEFAULT ] { 8 }
        Constant [ integer METRIC_UNDEFINED ] { 0 }
        Constant [ integer METRIC_MEANABSOLUTEERROR ] { 1 }
        Constant [ integer METRIC_MEANSQUAREERROR ] { 2 }
        Constant [ integer METRIC_PEAKABSOLUTEERROR ] { 3 }
        Constant [ integer METRIC_PEAKSIGNALTONOISERATIO ] { 4 }
        Constant [ integer METRIC_ROOTMEANSQUAREDERROR ] { 5 }
        Constant [ integer PIXEL_CHAR ] { 0 }
        Constant [ integer PIXEL_DOUBLE ] { 5 }
        Constant [ integer PIXEL_FLOAT ] { 4 }
        Constant [ integer PIXEL_INTEGER ] { 2 }
        Constant [ integer PIXEL_LONG ] { 3 }
        Constant [ integer PIXEL_SHORT ] { 1 }
        Constant [ integer COLORSPACE_UNDEFINED ] { 0 }
        Constant [ integer COLORSPACE_RGB ] { 1 }
        Constant [ integer COLORSPACE_GRAY ] { 2 }
        Constant [ integer COLORSPACE_TRANSPARENT ] { 3 }
        Constant [ integer COLORSPACE_OHTA ] { 4 }
        Constant [ integer COLORSPACE_LAB ] { 14 }
        Constant [ integer COLORSPACE_XYZ ] { 5 }
        Constant [ integer COLORSPACE_YCBCR ] { 17 }
        Constant [ integer COLORSPACE_YCC ] { 6 }
        Constant [ integer COLORSPACE_YIQ ] { 7 }
        Constant [ integer COLORSPACE_YPBPR ] { 8 }
        Constant [ integer COLORSPACE_YUV ] { 9 }
        Constant [ integer COLORSPACE_CMYK ] { 10 }
        Constant [ integer COLORSPACE_SRGB ] { 11 }
        Constant [ integer COLORSPACE_HSL ] { 12 }
        Constant [ integer COLORSPACE_HWB ] { 13 }
        Constant [ integer VIRTUALPIXELMETHOD_UNDEFINED ] { 0 }
        Constant [ integer VIRTUALPIXELMETHOD_CONSTANT ] { 1 }
        Constant [ integer VIRTUALPIXELMETHOD_EDGE ] { 2 }
        Constant [ integer VIRTUALPIXELMETHOD_MIRROR ] { 3 }
        Constant [ integer VIRTUALPIXELMETHOD_TILE ] { 4 }
        Constant [ integer PREVIEW_UNDEFINED ] { 0 }
        Constant [ integer PREVIEW_ROTATE ] { 1 }
        Constant [ integer PREVIEW_SHEAR ] { 2 }
        Constant [ integer PREVIEW_ROLL ] { 3 }
        Constant [ integer PREVIEW_HUE ] { 4 }
        Constant [ integer PREVIEW_SATURATION ] { 5 }
        Constant [ integer PREVIEW_BRIGHTNESS ] { 6 }
        Constant [ integer PREVIEW_GAMMA ] { 7 }
        Constant [ integer PREVIEW_SPIFF ] { 8 }
        Constant [ integer PREVIEW_DULL ] { 9 }
        Constant [ integer PREVIEW_GRAYSCALE ] { 10 }
        Constant [ integer PREVIEW_QUANTIZE ] { 11 }
        Constant [ integer PREVIEW_DESPECKLE ] { 12 }
        Constant [ integer PREVIEW_REDUCENOISE ] { 13 }
        Constant [ integer PREVIEW_ADDNOISE ] { 14 }
        Constant [ integer PREVIEW_SHARPEN ] { 15 }
        Constant [ integer PREVIEW_BLUR ] { 16 }
        Constant [ integer PREVIEW_THRESHOLD ] { 17 }
        Constant [ integer PREVIEW_EDGEDETECT ] { 18 }
        Constant [ integer PREVIEW_SPREAD ] { 19 }
        Constant [ integer PREVIEW_SOLARIZE ] { 20 }
        Constant [ integer PREVIEW_SHADE ] { 21 }
        Constant [ integer PREVIEW_RAISE ] { 22 }
        Constant [ integer PREVIEW_SEGMENT ] { 23 }
        Constant [ integer PREVIEW_SWIRL ] { 24 }
        Constant [ integer PREVIEW_IMPLODE ] { 25 }
        Constant [ integer PREVIEW_WAVE ] { 26 }
        Constant [ integer PREVIEW_OILPAINT ] { 27 }
        Constant [ integer PREVIEW_CHARCOALDRAWING ] { 28 }
        Constant [ integer PREVIEW_JPEG ] { 29 }
        Constant [ integer RENDERINGINTENT_UNDEFINED ] { 0 }
        Constant [ integer RENDERINGINTENT_SATURATION ] { 1 }
        Constant [ integer RENDERINGINTENT_PERCEPTUAL ] { 2 }
        Constant [ integer RENDERINGINTENT_ABSOLUTE ] { 3 }
        Constant [ integer RENDERINGINTENT_RELATIVE ] { 4 }
        Constant [ integer FILLRULE_UNDEFINED ] { 0 }
        Constant [ integer FILLRULE_EVENODD ] { 1 }
        Constant [ integer FILLRULE_NONZERO ] { 2 }
        Constant [ integer PATHUNITS_USERSPACE ] { 0 }
        Constant [ integer PATHUNITS_USERSPACEONUSE ] { 1 }
        Constant [ integer PATHUNITS_OBJECTBOUNDINGBOX ] { 2 }
        Constant [ integer LINECAP_UNDEFINED ] { 0 }
        Constant [ integer LINECAP_BUTT ] { 1 }
        Constant [ integer LINECAP_ROUND ] { 2 }
        Constant [ integer LINECAP_SQUARE ] { 3 }
        Constant [ integer LINEJOIN_UNDEFINED ] { 0 }
        Constant [ integer LINEJOIN_MITER ] { 1 }
        Constant [ integer LINEJOIN_ROUND ] { 2 }
        Constant [ integer LINEJOIN_BEVEL ] { 3 }
        Constant [ integer RESOURCETYPE_UNDEFINED ] { 0 }
        Constant [ integer RESOURCETYPE_AREA ] { 0 }
        Constant [ integer RESOURCETYPE_DISK ] { 1 }
        Constant [ integer RESOURCETYPE_FILE ] { 2 }
        Constant [ integer RESOURCETYPE_MAP ] { 3 }
        Constant [ integer RESOURCETYPE_MEMORY ] { 4 }
        Constant [ integer DISPOSE_UNDEFINED ] { 0 }
        Constant [ integer DISPOSE_NONE ] { 1 }
        Constant [ integer DISPOSE_BACKGROUND ] { 2 }
        Constant [ integer DISPOSE_PREVIOUS ] { 3 }
        Constant [ integer QUANTUM_DEPTH ] { 16 }
        Constant [ integer QUANTUM ] { 131071 }
        Constant [ string VERSION_TXT ] { 1.3.24 }
        Constant [ integer VERSION_LIB ] { 1578240 }
        Constant [ integer VERSION_NUM ] { 1003024 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [209] {
        Method [ <internal:gmagick, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $filename ]
          }
        }

        Method [ <internal:gmagick> public method __tostring ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method readimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:gmagick> public method writeimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:gmagick> public method resizeimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
            Parameter #2 [ <required> $filter ]
            Parameter #3 [ <required> $blur ]
            Parameter #4 [ <required> $fit ]
          }
        }

        Method [ <internal:gmagick> public method thumbnailimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
          }
        }

        Method [ <internal:gmagick> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method cropimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:gmagick> public method coalesceimages ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method compositeimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> Gmagick $source ]
            Parameter #1 [ <required> $COMPOSE ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method drawimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> GmagickDraw $GmagickDraw ]
          }
        }

        Method [ <internal:gmagick> public method annotateimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> GmagickDraw $GmagickDraw ]
            Parameter #1 [ <required> $x ]
            Parameter #2 [ <required> $y ]
            Parameter #3 [ <required> $angle ]
            Parameter #4 [ <required> $text ]
          }
        }

        Method [ <internal:gmagick> public method blurimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $radius ]
            Parameter #1 [ <required> $sigma ]
          }
        }

        Method [ <internal:gmagick> public method addimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> Gmagick $Gmagick ]
          }
        }

        Method [ <internal:gmagick> public method addnoiseimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $NOISE ]
          }
        }

        Method [ <internal:gmagick> public method negateimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $gray ]
            Parameter #1 [ <optional> $CHANNEL ]
          }
        }

        Method [ <internal:gmagick> public method borderimage ] {

          - Parameters [3] {
            Parameter #0 [ <required> $color ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:gmagick> public method thresholdimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $threshold ]
            Parameter #1 [ <optional> $CHANNELTYPE ]
          }
        }

        Method [ <internal:gmagick> public method charcoalimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $radius ]
            Parameter #1 [ <required> $sigma ]
          }
        }

        Method [ <internal:gmagick> public method chopimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method commentimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $comment ]
          }
        }

        Method [ <internal:gmagick> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method cropthumbnailimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
            Parameter #2 [ <optional> $fit ]
            Parameter #3 [ <optional> $legacy ]
          }
        }

        Method [ <internal:gmagick> public method cyclecolormapimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $displace ]
          }
        }

        Method [ <internal:gmagick> public method deconstructimages ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method despeckleimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method destroy ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method edgeimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $radius ]
          }
        }

        Method [ <internal:gmagick> public method embossimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $radius ]
            Parameter #1 [ <required> $sigma ]
          }
        }

        Method [ <internal:gmagick> public method enhanceimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method equalizeimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method flattenimages ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method flipimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method flopimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method frameimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> $color ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
            Parameter #3 [ <required> $inner_bevel ]
            Parameter #4 [ <required> $outer_bevel ]
          }
        }

        Method [ <internal:gmagick> public method gammaimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $gamma ]
          }
        }

        Method [ <internal:gmagick> public method getcopyright ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getfilename ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagebackgroundcolor ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagebackgroundcolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method getimageblueprimary ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagebordercolor ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagechanneldepth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimageblueprimary ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method setimagebordercolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method getimageblob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagesblob ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagechanneldepth ] {

          - Parameters [2] {
            Parameter #0 [ <required> $CHANNEL ]
            Parameter #1 [ <required> $depth ]
          }
        }

        Method [ <internal:gmagick> public method setimagecolorspace ] {

          - Parameters [1] {
            Parameter #0 [ <required> $COLORSPACE ]
          }
        }

        Method [ <internal:gmagick> public method setinterlacescheme ] {

          - Parameters [1] {
            Parameter #0 [ <required> $INTERLACE ]
          }
        }

        Method [ <internal:gmagick> public method getimagecolorspace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagecolors ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagecompose ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagedelay ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagedepth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getnumberimages ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagecompose ] {

          - Parameters [1] {
            Parameter #0 [ <required> $COMPOSITE ]
          }
        }

        Method [ <internal:gmagick> public method setimagecompression ] {

          - Parameters [1] {
            Parameter #0 [ <required> $COMPRESSION ]
          }
        }

        Method [ <internal:gmagick> public method getimagecompression ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagedelay ] {

          - Parameters [1] {
            Parameter #0 [ <required> $delay ]
          }
        }

        Method [ <internal:gmagick> public method setimagedepth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $depth ]
          }
        }

        Method [ <internal:gmagick> public method getimagedispose ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagedispose ] {

          - Parameters [1] {
            Parameter #0 [ <required> $DISPOSETYPE ]
          }
        }

        Method [ <internal:gmagick> public method setfilename ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:gmagick> public method getimageextrema ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagefilename ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagefilename ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:gmagick> public method getimageformat ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimageformat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $imageFormat ]
          }
        }

        Method [ <internal:gmagick> public method setcompressionquality ] {

          - Parameters [1] {
            Parameter #0 [ <required> $quality ]
          }
        }

        Method [ <internal:gmagick> public method getimagegamma ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagegamma ] {

          - Parameters [1] {
            Parameter #0 [ <required> $gamma ]
          }
        }

        Method [ <internal:gmagick> public method getimagegreenprimary ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimagegreenprimary ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method getimageheight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagehistogram ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimageindex ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimageindex ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }

        Method [ <internal:gmagick> public method getimageinterlacescheme ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimageinterlacescheme ] {

          - Parameters [1] {
            Parameter #0 [ <required> $INTERLACE ]
          }
        }

        Method [ <internal:gmagick> public method getimageiterations ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagemattecolor ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagepage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimageprofile ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimageredprimary ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagerenderingintent ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimageresolution ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagescene ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagesignature ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagetype ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimageiterations ] {

          - Parameters [1] {
            Parameter #0 [ <required> $iterations ]
          }
        }

        Method [ <internal:gmagick> public method setimageprofile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $profile ]
          }
        }

        Method [ <internal:gmagick> public method setimageredprimary ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method setimagerenderingintent ] {

          - Parameters [1] {
            Parameter #0 [ <required> $RENDERINGINTENT ]
          }
        }

        Method [ <internal:gmagick> public method setimageresolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $xResolution ]
            Parameter #1 [ <required> $yResolution ]
          }
        }

        Method [ <internal:gmagick> public method setresolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $xResolution ]
            Parameter #1 [ <required> $yResolution ]
          }
        }

        Method [ <internal:gmagick> public method setimagescene ] {

          - Parameters [1] {
            Parameter #0 [ <required> $scene ]
          }
        }

        Method [ <internal:gmagick> public method setimagetype ] {

          - Parameters [1] {
            Parameter #0 [ <required> $IMGTYPE ]
          }
        }

        Method [ <internal:gmagick> public method setimagepage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method getimageunits ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagewhitepoint ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagewidth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getpackagename ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getquantumdepth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getreleasedate ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getresourcelimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $resource_type ]
          }
        }

        Method [ <internal:gmagick> public method setresourcelimit ] {

          - Parameters [2] {
            Parameter #0 [ <required> $RESOURCETYPE ]
            Parameter #1 [ <required> $limit ]
          }
        }

        Method [ <internal:gmagick> public method getsamplingfactors ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getsize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimageunits ] {

          - Parameters [1] {
            Parameter #0 [ <required> $RESOLUTION ]
          }
        }

        Method [ <internal:gmagick> public method setimagewhitepoint ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method setsamplingfactors ] {

          - Parameters [1] {
            Parameter #0 [ <required> $factors ]
          }
        }

        Method [ <internal:gmagick> public method setsize ] {

          - Parameters [2] {
            Parameter #0 [ <required> $columns ]
            Parameter #1 [ <required> $rows ]
          }
        }

        Method [ <internal:gmagick> public method getversion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagegeometry ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> Gmagick $Gmagick ]
          }
        }

        Method [ <internal:gmagick> public method hasnextimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method haspreviousimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method implodeimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $radius ]
          }
        }

        Method [ <internal:gmagick> public method labelimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $label ]
          }
        }

        Method [ <internal:gmagick> public method levelimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $blackPoint ]
            Parameter #1 [ <required> $gamma ]
            Parameter #2 [ <required> $whitePoint ]
            Parameter #3 [ <optional> $CHANNEL ]
          }
        }

        Method [ <internal:gmagick> public method magnifyimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method mapimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> gmagick $gmagick ]
            Parameter #1 [ <required> $dither ]
          }
        }

        Method [ <internal:gmagick> public method medianfilterimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $radius ]
          }
        }

        Method [ <internal:gmagick> public method minifyimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method modulateimage ] {

          - Parameters [3] {
            Parameter #0 [ <required> $brightness ]
            Parameter #1 [ <required> $saturation ]
            Parameter #2 [ <required> $hue ]
          }
        }

        Method [ <internal:gmagick> public method motionblurimage ] {

          - Parameters [3] {
            Parameter #0 [ <required> $radius ]
            Parameter #1 [ <required> $sigma ]
            Parameter #2 [ <required> $angle ]
          }
        }

        Method [ <internal:gmagick> public method nextimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method newimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $columns ]
            Parameter #1 [ <required> $rows ]
            Parameter #2 [ <required> $background_color ]
            Parameter #3 [ <optional> $format ]
          }
        }

        Method [ <internal:gmagick> public method normalizeimage ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $CHANNEL ]
          }
        }

        Method [ <internal:gmagick> public method oilpaintimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method previousimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method profileimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $profile ]
          }
        }

        Method [ <internal:gmagick> public method quantizeimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> $numColors ]
            Parameter #1 [ <required> $COLORSPACE ]
            Parameter #2 [ <required> $treeDepth ]
            Parameter #3 [ <required> $dither ]
            Parameter #4 [ <required> $measureError ]
          }
        }

        Method [ <internal:gmagick> public method quantizeimages ] {

          - Parameters [5] {
            Parameter #0 [ <required> $numColors ]
            Parameter #1 [ <required> $COLORSPACE ]
            Parameter #2 [ <required> $treeDepth ]
            Parameter #3 [ <required> $dither ]
            Parameter #4 [ <required> $measureError ]
          }
        }

        Method [ <internal:gmagick> public method queryfonts ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method queryfontmetrics ] {

          - Parameters [2] {
            Parameter #0 [ <required> GmagickDraw $GmagickDraw ]
            Parameter #1 [ <required> $text ]
          }
        }

        Method [ <internal:gmagick> public method queryformats ] {

          - Parameters [1] {
            Parameter #0 [ <required> $pattern ]
          }
        }

        Method [ <internal:gmagick> public method radialblurimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $angle ]
            Parameter #1 [ <optional> $CHANNEL ]
          }
        }

        Method [ <internal:gmagick> public method raiseimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
            Parameter #4 [ <required> $raise ]
          }
        }

        Method [ <internal:gmagick> public method readimageblob ] {

          - Parameters [2] {
            Parameter #0 [ <required> $imageContents ]
            Parameter #1 [ <optional> $filename ]
          }
        }

        Method [ <internal:gmagick> public method readimagefile ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fp ]
          }
        }

        Method [ <internal:gmagick> public method reducenoiseimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $radius ]
          }
        }

        Method [ <internal:gmagick> public method removeimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method removeimageprofile ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:gmagick> public method resampleimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $xResolution ]
            Parameter #1 [ <required> $yResolution ]
            Parameter #2 [ <required> $FILTER ]
            Parameter #3 [ <required> $blur ]
          }
        }

        Method [ <internal:gmagick> public method rollimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method rotateimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $color ]
            Parameter #1 [ <required> $degrees ]
          }
        }

        Method [ <internal:gmagick> public method scaleimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
          }
        }

        Method [ <internal:gmagick> public method separateimagechannel ] {

          - Parameters [1] {
            Parameter #0 [ <required> $CHANNEL ]
          }
        }

        Method [ <internal:gmagick> public method sharpenimage ] {

          - Parameters [3] {
            Parameter #0 [ <required> $radius ]
            Parameter #1 [ <required> $sigma ]
            Parameter #2 [ <optional> $CHANNEL ]
          }
        }

        Method [ <internal:gmagick> public method shearimage ] {

          - Parameters [3] {
            Parameter #0 [ <required> $color ]
            Parameter #1 [ <required> $xShear ]
            Parameter #2 [ <required> $yShear ]
          }
        }

        Method [ <internal:gmagick> public method solarizeimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $threshold ]
          }
        }

        Method [ <internal:gmagick> public method spreadimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $radius ]
          }
        }

        Method [ <internal:gmagick> public method stripimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method swirlimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $degrees ]
          }
        }

        Method [ <internal:gmagick> public method trimimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fuzz ]
          }
        }

        Method [ <internal:gmagick> public method sampleimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $columns ]
            Parameter #1 [ <required> $rows ]
          }
        }

        Method [ <internal:gmagick> public method cloneimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method appendimages ] {

          - Parameters [1] {
            Parameter #0 [ <required> $stack ]
          }
        }

        Method [ <internal:gmagick> public method unsharpmaskimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $radius ]
            Parameter #1 [ <required> $sigma ]
            Parameter #2 [ <required> $amount ]
            Parameter #3 [ <required> $threshold ]
          }
        }

        Method [ <internal:gmagick> public method read ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:gmagick> public method write ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:gmagick> public method adaptivethresholdimage ] {

          - Parameters [3] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
            Parameter #2 [ <required> $offset ]
          }
        }

        Method [ <internal:gmagick> public method affinetransformimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> GmagickDraw $GmagickDraw ]
          }
        }

        Method [ <internal:gmagick> public method averageimages ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method blackthresholdimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method colordecisionlist ] {

          - Parameters [1] {
            Parameter #0 [ <required> $antialias ]
          }
        }

        Method [ <internal:gmagick> public method clipimage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method clippathimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $pathname ]
            Parameter #1 [ <required> $inside ]
          }
        }

        Method [ <internal:gmagick> public method colorfloodfillimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> $fill_color ]
            Parameter #1 [ <required> $fuzz ]
            Parameter #2 [ <required> $border_color ]
            Parameter #3 [ <required> $y ]
            Parameter #4 [ <required> $x ]
          }
        }

        Method [ <internal:gmagick> public method colorizeimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $colorize_color ]
            Parameter #1 [ <required> $opacity ]
          }
        }

        Method [ <internal:gmagick> public method compareimagechannels ] {

          - Parameters [3] {
            Parameter #0 [ <required> Gmagick $Gmagick ]
            Parameter #1 [ <required> $channel ]
            Parameter #2 [ <required> $metric ]
          }
        }

        Method [ <internal:gmagick> public method compareimages ] {

          - Parameters [2] {
            Parameter #0 [ <required> Gmagick $Gmagick ]
            Parameter #1 [ <required> $metric ]
          }
        }

        Method [ <internal:gmagick> public method contrastimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $sharpen ]
          }
        }

        Method [ <internal:gmagick> public method convolveimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $kernel ]
          }
        }

        Method [ <internal:gmagick> public method extentimage ] {

          - Parameters [4] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method getimageattribute ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:gmagick> public method getimagechannelextrema ] {

          - Parameters [1] {
            Parameter #0 [ <required> $channel ]
          }
        }

        Method [ <internal:gmagick> public method getimagechannelmean ] {

          - Parameters [1] {
            Parameter #0 [ <required> $channel ]
          }
        }

        Method [ <internal:gmagick> public method getimagecolormapcolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }

        Method [ <internal:gmagick> public method getimagegravity ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagevirtualpixelmethod ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method haldclutimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> Gmagick $Gmagick ]
          }
        }

        Method [ <internal:gmagick> public method mattefloodfillimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> $alpha ]
            Parameter #1 [ <required> $fuzz ]
            Parameter #2 [ <required> $color ]
            Parameter #3 [ <required> $x ]
            Parameter #4 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method montageimage ] {

          - Parameters [5] {
            Parameter #0 [ <required> GmagickDraw $GmagickDraw ]
            Parameter #1 [ <required> $tile_geometry ]
            Parameter #2 [ <required> $thumbnail_geometry ]
            Parameter #3 [ <required> $montageMode ]
            Parameter #4 [ <required> $frame ]
          }
        }

        Method [ <internal:gmagick> public method morphimages ] {

          - Parameters [1] {
            Parameter #0 [ <required> $frames ]
          }
        }

        Method [ <internal:gmagick> public method mosaicimages ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setimageattribute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:gmagick> public method setimagecolormapcolor ] {

          - Parameters [2] {
            Parameter #0 [ <required> $index ]
            Parameter #1 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method setimagegravity ] {

          - Parameters [1] {
            Parameter #0 [ <required> $gravity ]
          }
        }

        Method [ <internal:gmagick> public method setimagemattecolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method setimagevirtualpixelmethod ] {

          - Parameters [1] {
            Parameter #0 [ <required> $virtual_pixel_method ]
          }
        }

        Method [ <internal:gmagick> public method shaveimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $columns ]
            Parameter #1 [ <required> $rows ]
          }
        }

        Method [ <internal:gmagick> public method steganoimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> Gmagick $Gmagick ]
            Parameter #1 [ <required> $offset ]
          }
        }

        Method [ <internal:gmagick> public method stereoimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> Gmagick $Gmagick ]
          }
        }

        Method [ <internal:gmagick> public method waveimage ] {

          - Parameters [2] {
            Parameter #0 [ <required> $amplitude ]
            Parameter #1 [ <required> $waveLength ]
          }
        }

        Method [ <internal:gmagick> public method whitethresholdimage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method getimageboundingbox ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fuzz ]
          }
        }

        Method [ <internal:gmagick> public method getimagefuzz ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getimagesavedtype ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setdepth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $depth ]
          }
        }

        Method [ <internal:gmagick> public method setformat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $format ]
          }
        }

        Method [ <internal:gmagick> public method setimagefuzz ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fuzz ]
          }
        }

        Method [ <internal:gmagick> public method setimageoption ] {

          - Parameters [3] {
            Parameter #0 [ <required> $format ]
            Parameter #1 [ <required> $key ]
            Parameter #2 [ <required> $value ]
          }
        }

        Method [ <internal:gmagick> public method setimagesavedtype ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:gmagick> public method setresolutionunits ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x_resolution ]
            Parameter #1 [ <required> $y_resolution ]
          }
        }

        Method [ <internal:gmagick> public method writeimagefile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $handle ]
            Parameter #1 [ <optional> $format ]
          }
        }
      }
    }

    Class [ <internal:gmagick> class GmagickDraw ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [103] {
        Method [ <internal:gmagick> public method setstrokecolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method setstrokewidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $width ]
          }
        }

        Method [ <internal:gmagick> public method setfillcolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method setgravity ] {

          - Parameters [1] {
            Parameter #0 [ <required> $gravity ]
          }
        }

        Method [ <internal:gmagick> public method ellipse ] {

          - Parameters [6] {
            Parameter #0 [ <required> $ox ]
            Parameter #1 [ <required> $oy ]
            Parameter #2 [ <required> $px ]
            Parameter #3 [ <required> $py ]
            Parameter #4 [ <required> $start ]
            Parameter #5 [ <required> $end ]
          }
        }

        Method [ <internal:gmagick> public method affine ] {

          - Parameters [1] {
            Parameter #0 [ <required> $affineMatrix ]
          }
        }

        Method [ <internal:gmagick> public method annotate ] {

          - Parameters [3] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $text ]
          }
        }

        Method [ <internal:gmagick> public method arc ] {

          - Parameters [6] {
            Parameter #0 [ <required> $sx ]
            Parameter #1 [ <required> $sy ]
            Parameter #2 [ <required> $ex ]
            Parameter #3 [ <required> $ey ]
            Parameter #4 [ <required> $sd ]
            Parameter #5 [ <required> $ed ]
          }
        }

        Method [ <internal:gmagick> public method bezier ] {

          - Parameters [1] {
            Parameter #0 [ <required> $coordinate_array ]
          }
        }

        Method [ <internal:gmagick> public method getfillcolor ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getgravity ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getfillopacity ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getfont ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getfontsize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getfontstyle ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getfontweight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokeopacity ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokecolor ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokewidth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method gettextdecoration ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method gettextencoding ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method line ] {

          - Parameters [4] {
            Parameter #0 [ <required> $sx ]
            Parameter #1 [ <required> $sy ]
            Parameter #2 [ <required> $ex ]
            Parameter #3 [ <required> $ey ]
          }
        }

        Method [ <internal:gmagick> public method point ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method polygon ] {

          - Parameters [1] {
            Parameter #0 [ <required> $coordinates ]
          }
        }

        Method [ <internal:gmagick> public method polyline ] {

          - Parameters [1] {
            Parameter #0 [ <required> $coordinate_array ]
          }
        }

        Method [ <internal:gmagick> public method rectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x2 ]
            Parameter #3 [ <required> $y2 ]
          }
        }

        Method [ <internal:gmagick> public method rotate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $degrees ]
          }
        }

        Method [ <internal:gmagick> public method roundrectangle ] {

          - Parameters [6] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x2 ]
            Parameter #3 [ <required> $y2 ]
            Parameter #4 [ <required> $rx ]
            Parameter #5 [ <required> $ry ]
          }
        }

        Method [ <internal:gmagick> public method scale ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method setfillopacity ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fill_opacity ]
          }
        }

        Method [ <internal:gmagick> public method setfont ] {

          - Parameters [1] {
            Parameter #0 [ <required> $font ]
          }
        }

        Method [ <internal:gmagick> public method setfontsize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $pointsize ]
          }
        }

        Method [ <internal:gmagick> public method setfontstyle ] {

          - Parameters [1] {
            Parameter #0 [ <required> $STYLE ]
          }
        }

        Method [ <internal:gmagick> public method setfontweight ] {

          - Parameters [1] {
            Parameter #0 [ <required> $weight ]
          }
        }

        Method [ <internal:gmagick> public method setstrokeopacity ] {

          - Parameters [1] {
            Parameter #0 [ <required> $stroke_opacity ]
          }
        }

        Method [ <internal:gmagick> public method settextdecoration ] {

          - Parameters [1] {
            Parameter #0 [ <required> $DECORATION ]
          }
        }

        Method [ <internal:gmagick> public method settextencoding ] {

          - Parameters [1] {
            Parameter #0 [ <required> $encoding ]
          }
        }

        Method [ <internal:gmagick> public method setstrokeantialias ] {

          - Parameters [1] {
            Parameter #0 [ <required> $antialias ]
          }
        }

        Method [ <internal:gmagick> public method setstrokedashoffset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $offset ]
          }
        }

        Method [ <internal:gmagick> public method setstrokelinecap ] {

          - Parameters [1] {
            Parameter #0 [ <required> $LINECAP ]
          }
        }

        Method [ <internal:gmagick> public method setstrokelinejoin ] {

          - Parameters [1] {
            Parameter #0 [ <required> $LINEJOIN ]
          }
        }

        Method [ <internal:gmagick> public method setstrokemiterlimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $miterLimit ]
          }
        }

        Method [ <internal:gmagick> public method getstrokeantialias ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokedashoffset ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokelinecap ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokelinejoin ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokemiterlimit ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method getstrokedasharray ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setstrokedasharray ] {

          - Parameters [1] {
            Parameter #0 [ <required> $dashArray ]
          }
        }

        Method [ <internal:gmagick> public method circle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $ox ]
            Parameter #1 [ <required> $oy ]
            Parameter #2 [ <required> $px ]
            Parameter #3 [ <required> $py ]
          }
        }

        Method [ <internal:gmagick> public method getclippath ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setclippath ] {

          - Parameters [1] {
            Parameter #0 [ <required> $clipMask ]
          }
        }

        Method [ <internal:gmagick> public method getcliprule ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setcliprule ] {

          - Parameters [1] {
            Parameter #0 [ <required> $FILLRULE ]
          }
        }

        Method [ <internal:gmagick> public method getclipunits ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setclipunits ] {

          - Parameters [1] {
            Parameter #0 [ <required> $PATHUNITS ]
          }
        }

        Method [ <internal:gmagick> public method color ] {

          - Parameters [3] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $PAINTMETHOD ]
          }
        }

        Method [ <internal:gmagick> public method comment ] {

          - Parameters [1] {
            Parameter #0 [ <required> $comment ]
          }
        }

        Method [ <internal:gmagick> public method setfillpatternurl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $url ]
          }
        }

        Method [ <internal:gmagick> public method getfillrule ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setfillrule ] {

          - Parameters [1] {
            Parameter #0 [ <required> $FILLRULE ]
          }
        }

        Method [ <internal:gmagick> public method getfontfamily ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setfontfamily ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fontfamily ]
          }
        }

        Method [ <internal:gmagick> public method getfontstretch ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setfontstretch ] {

          - Parameters [1] {
            Parameter #0 [ <required> $STRETCH ]
          }
        }

        Method [ <internal:gmagick> public method pathclose ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method pathcurvetoabsolute ] {

          - Parameters [6] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x2 ]
            Parameter #3 [ <required> $y2 ]
            Parameter #4 [ <required> $x ]
            Parameter #5 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathcurvetorelative ] {

          - Parameters [6] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x2 ]
            Parameter #3 [ <required> $y2 ]
            Parameter #4 [ <required> $x ]
            Parameter #5 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathcurvetoquadraticbezierabsolute ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathcurvetoquadraticbezierrelative ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathcurvetoquadraticbeziersmoothabsolute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathcurvetoquadraticbeziersmoothrelative ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathcurvetosmoothabsolute ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathcurvetosmoothrelative ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x ]
            Parameter #3 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathellipticarcabsolute ] {

          - Parameters [7] {
            Parameter #0 [ <required> $rx ]
            Parameter #1 [ <required> $ry ]
            Parameter #2 [ <required> $xAxisRotation ]
            Parameter #3 [ <required> $largeArc ]
            Parameter #4 [ <required> $sweep ]
            Parameter #5 [ <required> $x ]
            Parameter #6 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathellipticarcrelative ] {

          - Parameters [7] {
            Parameter #0 [ <required> $rx ]
            Parameter #1 [ <required> $ry ]
            Parameter #2 [ <required> $xAxisRotation ]
            Parameter #3 [ <required> $largeArc ]
            Parameter #4 [ <required> $sweep ]
            Parameter #5 [ <required> $x ]
            Parameter #6 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathfinish ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method pathlinetoabsolute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathlinetorelative ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathlinetohorizontalabsolute ] {

          - Parameters [1] {
            Parameter #0 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathlinetohorizontalrelative ] {

          - Parameters [1] {
            Parameter #0 [ <required> $x ]
          }
        }

        Method [ <internal:gmagick> public method pathlinetoverticalabsolute ] {

          - Parameters [1] {
            Parameter #0 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathlinetoverticalrelative ] {

          - Parameters [1] {
            Parameter #0 [ <required> $x ]
          }
        }

        Method [ <internal:gmagick> public method pathmovetoabsolute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathmovetorelative ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method pathstart ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method popclippath ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method popdefs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method poppattern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method pushclippath ] {

          - Parameters [1] {
            Parameter #0 [ <required> $clipMask ]
          }
        }

        Method [ <internal:gmagick> public method pushdefs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method pushpattern ] {

          - Parameters [5] {
            Parameter #0 [ <required> $pattern_id ]
            Parameter #1 [ <required> $x ]
            Parameter #2 [ <required> $y ]
            Parameter #3 [ <required> $width ]
            Parameter #4 [ <required> $height ]
          }
        }

        Method [ <internal:gmagick> public method skewx ] {

          - Parameters [1] {
            Parameter #0 [ <required> $degrees ]
          }
        }

        Method [ <internal:gmagick> public method skewy ] {

          - Parameters [1] {
            Parameter #0 [ <required> $degrees ]
          }
        }

        Method [ <internal:gmagick> public method setstrokepatternurl ] {

          - Parameters [1] {
            Parameter #0 [ <required> $url ]
          }
        }

        Method [ <internal:gmagick> public method gettextantialias ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method settextantialias ] {

          - Parameters [1] {
            Parameter #0 [ <required> $antialias ]
          }
        }

        Method [ <internal:gmagick> public method gettextundercolor ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method settextundercolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method translate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:gmagick> public method setviewbox ] {

          - Parameters [4] {
            Parameter #0 [ <required> $sx ]
            Parameter #1 [ <required> $sy ]
            Parameter #2 [ <required> $ex ]
            Parameter #3 [ <required> $ey ]
          }
        }

        Method [ <internal:gmagick> public method popGraphicContext ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method pushGraphicContext ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:gmagick> class GmagickPixel ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:gmagick, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $color ]
          }
        }

        Method [ <internal:gmagick> public method setcolor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method getcolor ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $as_array ]
            Parameter #1 [ <optional> $normalize_array ]
          }
        }

        Method [ <internal:gmagick> public method getcolorcount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:gmagick> public method setcolorcount ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color_count ]
          }
        }

        Method [ <internal:gmagick> public method getcolorvalue ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method setcolorvalue ] {

          - Parameters [2] {
            Parameter #0 [ <required> $color ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:gmagick> public method getcolorvaluequantum ] {

          - Parameters [1] {
            Parameter #0 [ <required> $color ]
          }
        }

        Method [ <internal:gmagick> public method setcolorvaluequantum ] {

          - Parameters [2] {
            Parameter #0 [ <required> $color ]
            Parameter #1 [ <required> $value ]
          }
        }
      }
    }
  }
}

